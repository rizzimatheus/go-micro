{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test Microservices</h1>
                <hr>
                <a id="brokerBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Broker</a>
                <br>
                <a id="authJSONBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Auth JSON</a>
                <a id="authRabbitBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Auth Rabbit</a>
                <a id="authRPCBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Auth RPC</a>
                <a id="authGRPCBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Auth gRPC</a>
                <br>
                <a id="logJSONBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Log JSON</a>
                <a id="logRabbitBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Log Rabbit</a>
                <a id="logRPCBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Log RPC</a>
                <a id="logGRPCBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Log gRPC</a>
                <br>
                <a id="mailJSONBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Mail JSON</a>
                <a id="mailRabbitBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Mail Rabbit</a>
                <a id="mailRPCBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Mail RPC</a>
                <a id="mailGRPCBtn" class="btn btn-outline-secondary mb-2" style="width: 150px" href="javascript:void(0);">Mail gRPC</a>

                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
    let brokerBtn = document.getElementById("brokerBtn");

    let authJSONBtn = document.getElementById("authJSONBtn");
    let authRabbitBtn = document.getElementById("authRabbitBtn");
    let authRPCBtn = document.getElementById("authRPCBtn");
    let authGRPCBtn = document.getElementById("authGRPCBtn");

    let logJSONBtn = document.getElementById("logJSONBtn");
    let logRabbitBtn = document.getElementById("logRabbitBtn");
    let logRPCBtn = document.getElementById("logRPCBtn");
    let logGRPCBtn = document.getElementById("logGRPCBtn");

    let mailJSONBtn = document.getElementById("mailJSONBtn");
    let mailRabbitBtn = document.getElementById("mailRabbitBtn");
    let mailRPCBtn = document.getElementById("mailRPCBtn");
    let mailGRPCBtn = document.getElementById("mailGRPCBtn");

    let output = document.getElementById("output");
    let sent = document.getElementById("payload");
    let recevied = document.getElementById("received");

    const brokerURL = "http:\/\/localhost:8080"
    const handleURL = "http:\/\/localhost:8080/handle"

    function makeRequest(url, payload) {
        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            body: JSON.stringify(payload),
            headers: headers,
        }

        fetch(url, body)
        .then((response) => response.json())
        .then((data) => {
            sent.innerHTML = JSON.stringify(payload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            if (data.error) {
                output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
            } else {
                output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`;
            }
        })
        .catch((error) => {
            output.innerHTML += "<br><br>Error: " + error;
        })
    }

    brokerBtn.addEventListener("click", function(){ makeRequest(brokerURL, {}) })

    authJSONBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "auth-json",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret",
                }
            }
        )
    })

    authRabbitBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "auth-rabbit",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret",
                }
            }
        )
    })

    authRPCBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "auth-rpc",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret",
                }
            }
        )
    })

    authGRPCBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "auth-grpc",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret",
                }
            }
        )
    })

    logJSONBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "log-json",
                log: {
                    name: "event",
                    data: "Some kind of data, logged via JSON",
                }
            }
        )
    })

    logRabbitBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "log-rabbit",
                log: {
                    name: "event",
                    data: "Some kind of data, logged via Rabbit",
                }
            }
        )
    })

    logRPCBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "log-rpc",
                log: {
                    name: "event",
                    data: "Some kind of data, logged via RPC",
                }
            }
        )
    })

    logGRPCBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "log-grpc",
                log: {
                    name: "event",
                    data: "Some kind of data, logged via gRPC",
                }
            }
        )
    })

    mailJSONBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "mail-json",
                mail: {
                    from: "me@example.com",
                    to: "you@there.com",
                    subject: "Test JSON email",
                    message: "Hello world!",
                }
            }
        )
    })

    mailRabbitBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "mail-rabbit",
                mail: {
                    from: "me@example.com",
                    to: "you@there.com",
                    subject: "Test Rabbit email",
                    message: "Hello world!",
                }
            }
        )
    })

    mailRPCBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "mail-rpc",
                mail: {
                    from: "me@example.com",
                    to: "you@there.com",
                    subject: "Test RPC email",
                    message: "Hello world!",
                }
            }
        )
    })

    mailGRPCBtn.addEventListener("click", function(){
        makeRequest(
            handleURL, 
            {
                action: "mail-grpc",
                mail: {
                    from: "me@example.com",
                    to: "you@there.com",
                    subject: "Test gRPC email",
                    message: "Hello world!",
                }
            }
        )
    })
        
    </script>
{{end}}
